services:
  web:
    image: ghcr.io/YOUR_GITHUB_ORG/YOUR_REPO/web:latest
    container_name: sadd_web
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - SETUP_KEY=${SETUP_KEY}
      - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
      - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
      - OSRM_URL=${OSRM_URL}
      - NOMINATIM_URL=${NOMINATIM_URL}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sadd-net

  db:
    image: postgres:16-alpine
    container_name: sadd_db
    environment:
      - POSTGRES_DB=sadd
      - POSTGRES_USER=sadd
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - sadd-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sadd -d sadd || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - sadd-net

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: sadd_tunnel
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CF_TUNNEL_TOKEN}
    depends_on:
      web:
        condition: service_started
    restart: unless-stopped
    networks:
      - sadd-net

  watchtower:
    image: containrrr/watchtower
    container_name: sadd_watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount Docker client auth so Watchtower can pull private GHCR images.
      # Ensure you run `sudo docker login ghcr.io` so /root/.docker/config.json exists.
      - /root/.docker/config.json:/config.json:ro
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0/5 * * * *
    restart: unless-stopped
    networks:
      - sadd-net

volumes:
  sadd-db:

networks:
  sadd-net:
    name: sadd-net
